[tool.poetry]
name = "freak"
version = "0.0.1"
description = "Remote application state control"
authors = ["Daniel Gafni <danielgafni16@gmail.com>"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/danielgafni/freak"
keywords = ["state", "control", "remote", "application"]
classifiers = [
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Programming Language :: Python"
]

[tool.poetry.dependencies]
python = "^3.8"
fastapi = "*"
uvicorn = "*"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.2"
httpx = "^0.23.3"
black = "^23.1.0"
ruff = "^0.0.259"
pre-commit = "^3.2.1"
pyright = "^1.1.300"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "--doctest-modules"
log_cli = true
log_level = "INFO"

[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.ruff_cache
  | \.pyright_cache
  | \.venv
  | build
  | dist
  )/
'''

[tool.ruff]
target-version = "py38"
line-length = 120
src = [
    "freak",
    "tests",
    "examples",
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".pyright_cache",
    ".ruff_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
[tool.ruff.isort]
known-first-party = ["freak", "tests"]
